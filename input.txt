(+ 1 (* 2 3) (/ 3 (- 5 1)))
(min (+ 1 3) 2 (/ 1 5))
(expt 5 2)
(expt (- 5 1) (* 2 2))
(log 3 9)
(log 2.7)
(remainder 4.0 2.0)
(+ 3 (if (= 2 (* 1 3)) 2 3))
(+ 1)
(cond ((= 1 1) 1 1) ((= 1 2) 3))
(+ 1 (begin (+ 1 2) (- 3 2) (* 6 1)))
(= 1)
(+)
(define p 3)
(let ((a 1) (b 2)) (let ((a 2)) (+ a b p)))
(set! p (+ p 3))
(let ((a (+ 3 4)) (b 3)) (+ a b p))
